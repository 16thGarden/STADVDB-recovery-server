<table width="90%" style="table-layout: fixed; margin: 5%">
    <tr>
        <td>
            <h1>Recovery Server</h1>
            <h6>pending queries</h6>
        </td>
    </tr>
</table>
<table border="1px" width="90%" style="table-layout: fixed; margin: 5%">
    <tr>
        <th>Node 1</th>
        <th>Node 2</th>
        <th>Node 3</th>
    </tr>
    <tr>
        <td>
            <table id="querysNode1" border="1px" width="98%" style="table-layout: fixed; margin: 1%;">
                {{#each queries1}}
                <tr>
                    <td>{{this}}</td>
                </tr>
                {{/each}}
            </table>
        </td>
        <td>
            <table id="querysNode2" border="1px" width="98%" style="table-layout: fixed; margin: 1%;">
                {{#each queries2}}
                <tr>
                    <td>{{this}}</td>
                </tr>
                {{/each}}
            </table>
        </td>
        <td>
            <table id="querysNode3" border="1px" width="98%" style="table-layout: fixed; margin: 1%;">
                {{#each queries3}}
                <tr>
                    <td>{{this}}</td>
                </tr>
                {{/each}}
            </table>
        </td>
    </tr>
</table>

<table width="90%" style="table-layout: fixed; margin: 5%">
    <tr>
        <td>
            <input id="updatedatabases" type="button" value="Update Databases">
        </td>
    </tr>
    <tr>
        <td>
            <h6 id="warning1" style="color: red;"></h6>
        </td>
    </tr>
    <tr>
        <td>
            <h6 id="warning2" style="color: red;"></h6>
        </td>
    </tr>
    <tr>
        <td>
            <h6 id="warning3" style="color: red;"></h6>
        </td>
    </tr>
</table>

<script>
    //const socket = io('http://localhost:3000')
    const socket = io('https://stadvdb-recovery-server.herokuapp.com/')
    socket.on('connection', () => {})
    socket.on('message', (data) => {
        node = data.node
        query = data.query
        if (node == 1) {
            $("#querysNode1").html($("#querysNode1").html() + "<tr><td>" + query + "</td></tr>")
        } else if (node == 2) {
            $("#querysNode2").html($("#querysNode2").html() + "<tr><td>" + query + "</td></tr>")
        } else if (node == 3) {
            $("#querysNode3").html($("#querysNode3").html() + "<tr><td>" + query + "</td></tr>")
        }
    })

    $("#updatedatabases").click(function() {
        $("#updatedatabases").val("Updating...")
        $("#warning1").html("")
        $("#warning2").html("")
        $("#warning3").html("")

        $.post("/updatedatabases", {}, function(data) {
            var error1 = data.error1
            var error2 = data.error2
            var error3 = data.error3

            if (error1) {
                $("#warning1").html("node 1 offline")
            } else {
                $("#querysNode1").html("")
                $("#warning1").html("node 1 successful")
            }

            if (error2) {
                $("#warning2").html("node 2 offline")
            } else {
                $("#querysNode1").html("")
                $("#warning2").html("node 2 successful")
            }

            if (error1) {
                $("#warning3").html("node 3 offline")
            } else {
                $("#querysNode1").html("")
                $("#warning3").html("node 3 successful")
            }

            $("#updatedatabases").val("Update Databases")
        })
    })
</script>
